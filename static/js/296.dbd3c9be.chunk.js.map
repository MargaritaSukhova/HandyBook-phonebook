{"version":3,"file":"static/js/296.dbd3c9be.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Error/Error.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/ContactsPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectSortedContacts = createSelector(\n  [selectContacts],\n  contacts => {\n    const contactsCopy = [...contacts];\n    const contactsInAlphabeticalOrder = contactsCopy.sort((a, b) =>\n      a.name.localeCompare(b.name)\n    );\n    return contactsInAlphabeticalOrder;\n  }\n);\n\nexport const selectFilteredContacts = createSelector(\n  [selectSortedContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    if (contacts) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport {\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  TextField,\n  Typography,\n} from '@mui/material';\n\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    if (e.currentTarget.name === 'name') {\n      setName(e.currentTarget.value);\n    } else if (e.currentTarget.name === 'number') {\n      const regex = /^[0-9\\b]+$/;\n      if (e.currentTarget.value === '' || regex.test(e.currentTarget.value)) {\n        setNumber(e.currentTarget.value);\n      }\n    }\n  };\n\n  const handleContactSave = e => {\n    e.preventDefault();\n\n    if (checkContacts(name)) {\n      return alert(`${name} is already in contacts list!`);\n    }\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  const checkContacts = name => {\n    const normalizedName = name.toLocaleLowerCase();\n    return contacts.find(\n      contact => contact.name.toLocaleLowerCase() === normalizedName\n    );\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Typography component=\"h1\" variant=\"h4\" mt={6} align=\"center\">\n        Add contact\n      </Typography>\n      <Box\n        sx={{\n          marginTop: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Box\n          component=\"form\"\n          onSubmit={handleContactSave}\n          noValidate\n          sx={{ mt: 1 }}\n        >\n          <TextField\n            value={name}\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            margin=\"normal\"\n            fullWidth\n            label=\"Name\"\n            autoComplete=\"name\"\n            autoFocus\n          />\n          <TextField\n            value={number}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            id=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            margin=\"normal\"\n            fullWidth\n            label=\"Number\"\n            autoComplete=\"Number\"\n          />\n          <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, mb: 2 }}>\n            Add contact\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  IconButton,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport { deleteContact } from 'redux/operations';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleContactDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ListItem\n      secondaryAction={\n        <IconButton\n          type=\"button\"\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={() => handleContactDelete(id)}\n          color=\"primary\"\n        >\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemAvatar>\n        <Avatar>\n          <ContactPhoneIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={`${name}`} />\n      <ListItemText primary={`${number}`} sx={{ textAlign: 'end' }} />\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/selectors';\nimport { Box, Container, Grid } from '@mui/material';\nimport ContactListItem from '../ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <Container component=\"main\" maxWidth=\"sm\" sx={{ marginTop: 8 }}>\n      <Box sx={{ flexGrow: 1, maxWidth: 752 }}>\n        <Grid item xs={4} md={4}>\n          {filteredContacts &&\n            filteredContacts.map(({ id, name, number }) => {\n              return (\n                <ContactListItem key={id} id={id} name={name} number={number} />\n              );\n            })}\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const Error = styled.h2`\n  font-size: 32px;\n  font-weight: 700;\n  text-align: center;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  Box,\n  Container,\n  CssBaseline,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { selectFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filterSlice';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Typography component=\"h1\" variant=\"h4\" mt={6} align=\"center\">\n        Your contacts\n      </Typography>\n      <Box\n        sx={{\n          marginTop: 4,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <TextField\n          type=\"text\"\n          id=\"filter\"\n          value={filter}\n          onChange={handleFilterChange}\n          name=\"filter\"\n          margin=\"normal\"\n          fullWidth\n          label=\"Find contacts by name\"\n          autoComplete=\"Filter\"\n        />\n      </Box>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import { Box } from '@mui/material';\nimport { MagnifyingGlass } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Box\n      sx={{\n        marginTop: 4,\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      }}\n    >\n      <MagnifyingGlass\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"MagnifyingGlass-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"MagnifyingGlass-wrapper\"\n        glassColor=\"#c0efff\"\n        color=\"#e15b64\"\n      />\n    </Box>\n  );\n};\n\nexport default Loader;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Typography } from '@mui/material';\nimport { fetchContacts } from 'redux/operations';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/selectors';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport { Error } from 'components/Error/Error.styled';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\n\nexport default function ContactsPage() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  console.log(contacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      {isLoading && <Loader />}\n      {error && <Error>{error}</Error>}\n      {contacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <Typography mt={6} textAlign={'center'}>\n          You don't have contacts yet\n        </Typography>\n      )}\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectSortedContacts","createSelector","sort","a","b","name","localeCompare","selectFilteredContacts","normalizedFilter","toLowerCase","contact","includes","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","e","currentTarget","value","test","checkContacts","normalizedName","toLocaleLowerCase","find","reset","Container","component","maxWidth","CssBaseline","Typography","variant","mt","align","Box","sx","marginTop","display","flexDirection","alignItems","onSubmit","preventDefault","alert","newContact","id","nanoid","addContact","noValidate","TextField","onChange","type","pattern","title","required","margin","fullWidth","label","autoComplete","autoFocus","Button","mb","ListItem","secondaryAction","IconButton","edge","onClick","contactId","deleteContact","color","Delete","ListItemAvatar","Avatar","ContactPhone","ListItemText","primary","textAlign","filteredContacts","flexGrow","Grid","item","xs","md","map","Error","styled","changeFilter","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","ContactsPage","console","log","useEffect","fetchContacts","length"],"sourceRoot":""}